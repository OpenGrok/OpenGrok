= How to build {OpenGrok =

The easiest way to build (or modify) {OpenGrok is by using [http://www.netbeans.org NetBeans] (latest preferred), but you can also build {OpenGrok from the command line.

== Requirements ==

You need the following:

* [http://java.sun.com/javase/downloads/index.jsp JDK] 1.8 or higher
* [http://ant.apache.org/ Apache Ant] 1.9 or later
* The source code is located in a [http://git-scm.com/ git] repository
* First build has to happen with ant/mvn which downloads all dependencies
* [http://www.junit.org/ Junit] 4.x for testing if you don't have [http://www.netbeans.org/ Netbeans]

== Check out the source ==

The first thing you need to do is to check out the source code. You might do this from within NetBeans if you have the Mercurial plugin installed, or you can check out the source with the following command:

 git clone https://github.com/OpenGrok/OpenGrok

(or clone any of your forks)

== Open correct project ==

OpenGrok uses ant project as main one. Please select the top directory or the opengrok-web-nbproject as 2 possible netbeans projects.
OpenGrok does have a maven pom.xml for its modules, but these are not really tested to work with IDEs (though feel free to improve them to get mvn work with IDEs in better way).

== Prepare the source for compilation ==

First build should download all needed dependencies, so don't get scared about missing jars.

== Compile the source ==

If you use NetBeans you should be able to open OpenGrok as a project and build it from there(ignore "Resolve problem" for jar files other than junit, but setup a webapp server for the -web-nbproject application). If you want to build from the command line, execute the following command(it will need internet connection first time, so setup any proxies if needed):

 ant

If the build is successful, you should now find the binaries under the <code>dist</code> directory.

Or if you want to use junit testing + javadoc generation target, you can try:

 ant default


If the build is successful, you should have javadoc in <code>dist/javadoc</code> directory & junit test results in <code>build/test/results/*.xml</code> directory.

For other setup & development tools like findbugs, checkstyle, pmd, ... please refer to [https://github.com/OpenGrok/OpenGrok/blob/master/README.txt README.txt] in the downloaded/cloned sources.

Note that there is an experimental maven build system being implemented. If you want to help with it, we'd only be glad.

= Useful Tools =

Travis CI: <a href="https://travis-ci.org/OpenGrok/OpenGrok">OpenGrok on Travis <img src="https://travis-ci.org/OpenGrok/OpenGrok.png?branch=master"/></a>

Coverity scan: <a href="https://scan.coverity.com/projects/2627">
  <img alt="Coverity Scan Build Status"
       src="https://scan.coverity.com/projects/2627/badge.svg"/>
</a>

VersionEye: <a href='https://www.versioneye.com/user/projects/54b7a584050646ca5c0001aa'><img src='https://www.versioneye.com/user/projects/54b7a584050646ca5c0001aa/badge.svg?style=flat' alt="Dependency Status" /></a>

Inspecting indexes: [http://code.google.com/p/luke/ Luke] - this site is abandoned, we maintain a fork on [http://github.com/tarzanek/luke tarzanek/Luke] 
